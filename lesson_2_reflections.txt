
When initializing a repository, git creates a .git file and it contains all the metadata for the git repository. 
Initially there are no commits.

Initialize a repository using git init. and check the status using git status.

The working directory contains the repository and the .git directory.

The staging area has all the files that are to be included in the next commit. We can choose to add the files which we want to take a snapshot of. 

Branches can be used to do experiments with your projects, isolated from the main master branch. The master branch is the default branch. It gives me more freedom to experiment.

To create a new branch 
	git branch <branch name>
	git checkout <branch name>

The detached HEAD warning is shown when we checkout a previous commit and any extra commits we make from there are not reacheable from any branch.

Diagrams help me visualize the branch structure, because the parent of each commit is clearly visible and so are the unreachable commits made from a detached head state.

Merging two branches together creates a single commit, which merges the changes made to both the branches. 

The strategy followed is to incorporate changes with respect to the commit made before the branch.

To merge use git merge <branch 1> <branch 2> 

The commit made for merging has 2 parents, one for each branch. 
Git log shows the commits in chronological order.
